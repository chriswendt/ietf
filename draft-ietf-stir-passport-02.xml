<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY IANA.MediaTypes SYSTEM "http://www.iana.org/assignments/media-types">
<!ENTITY ietf-stir-rfc4474bis SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-stir-rfc4474bis.xml">
<!ENTITY UNICODE SYSTEM "http://www.unicode.org/versions/latest/">
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2046.xml">
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3261.xml">
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3986.xml">
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5280.xml">
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6838.xml">
<!ENTITY RFC7515 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7515.xml">
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7518.xml">
<!ENTITY RFC7519 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7519.xml">
<!ENTITY RFC7638 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7638.xml">
]>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<?rfc strict="yes" ?>
<?rfc toc="yes" ?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc rfcedstyle="no" ?>
<?rfc iprnotified="no" ?>
<?rfc colonspace="yes" ?>
<rfc category="std" docName="draft-ietf-stir-passport-01" ipr="trust200902">

  <front>
    <title abbrev="PASSporT">Persona Assertion Token</title>

    <author fullname="Chris Wendt" initials="C." surname="Wendt">
      <organization>Comcast</organization>

      <address>
        <postal>
          <street>One Comcast Center</street>
          <city>Philadelphia</city>
          <region>PA</region>
          <code>19103</code>
          <country>USA</country>
        </postal>
        <email>chris-ietf@chriswendt.net</email>
      </address>
    </author>
    
    <author fullname="Jon Peterson" initials="J." surname="Peterson">
      <organization>Neustar Inc.</organization>

      <address>
        <postal>
          <street>1800 Sutter St Suite 570</street>
          <city>Concord</city>
          <region>CA</region>
          <code>94520</code>
          <country>US</country>
        </postal>
        <email>jon.peterson@neustar.biz</email>
      </address>
    </author>
    
    <date month="March" year="2016" />
    
    <area>ART</area>
    
    <workgroup>STIR</workgroup>
    
    <abstract>
      <t> This document defines a token format for verifying with non-repudiation the sender of and authorization to send information related to the originator of personal communications. A cryptographic signature is defined to protect the integrity of the information used to identify the originator of a personal communications session (e.g. the telephone number or URI) and verify the accuracy of this information at the destination. The cryptographic signature is defined with the intention that it can confidently verify the originating persona even when the signature is sent to the destination party over an unsecure channel. The Persona Assertion Token (PASSporT) is particularly useful for many personal communications applications over IP networks and other multi-hop interconnection scenarios where the originating and destination parties may not have a direct trusted relationship.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction" anchor="sec.introduction">
      <t>In today's IP-enabled telecommunications world, there is a growing concern about the ability to trust incoming invitations for communications sessions, including video, voice and messaging. As an example, modern telephone networks provide the ability to spoof the calling party telephone number for many legitimate purposes including providing network features and services on the behalf of a legitimate telephone number.  However, as we have seen, bad actors have taken advantage of this ability for illegitimate and fraudulent purposes meant to trick telephone users to believe they are someone they are not. This problem can be extended to many emerging forms of personal communications.</t>
      <t>This document defines a common method for creating and validating a token that cryptographically verifies an originating identity, or more generally a URI or application specific identity string representing the originator of personal communications. Through extended profiles other information relevant to the personal communications can also be attached to the token.  The primary goal of PASSporT is to provide a common framework for signing persona related information in an extensible way.  A secondary goal is to provide this functionality independent of any specific personal communications signaling call logic, so that creation and verification of persona information can be implemented in a flexible way and can be used in many personal communications applications including end-to-end applications that require different signaling protocols.  It is anticipated that signaling protocol specific guidance will be provided in other related documents and specifications to specify how to use and transport PASSporT tokens, however this is intentionally out of scope for this document.</t>
      <t>Note: As of the authoring of this document, <xref target="I-D.ietf-stir-rfc4474bis"></xref> provides details of how to use PASSporT within SIP signaling for the signing and verification of telephone numbers.</t>
      
    </section>
    
    <section title="Token Overview" anchor="sec.token_overview">
      
      <t>Tokens are a convenient way of encapsulating information with associated digital signatures. They are used in many applications that require authentication, authorization, encryption, non-repudiation and other use cases.  JSON Web Token (JWT) <xref target="RFC7519"></xref> and JSON Web Signature (JWS) <xref target="RFC7515"></xref> are designed to provide a compact form for many of these purposes and define a specific method and syntax for signing a specific set of information or "claims" within the token and therefore providing an extensible set of claims. Additionally, JWS provides extensible mechanisms for specifying the method and cryptographic algorithms used for the associated digital signatures.</t>
      
    </section>
    
    <section title="PASSporT Definition" anchor="sec.passport_definition">
      
      <t>The PASSporT is constructed based on JWT <xref target="RFC7519"></xref> and JWS <xref target="RFC7515"></xref> specifications.  JWS defines the use of JSON data structures in a specified canonical format for signing data corresponding to JOSE header, JWS Payload, and JWS Signature.  JWT defines specific set of claims that are represented by specified key value pairs which can be extended with custom keys for specific applications. </t>
      
      <section title="PASSporT Header" anchor="sec.passport_header">
        <t>The JWS token header is a JOSE header <xref target="RFC7515"></xref> that defines the type and encryption algorithm used in the token.</t>
        <t>An example of the header for the case of an ECDSA P-256 digital signature would be the following,
          <figure>
            <artwork><![CDATA[
    { 
        "typ":"passport",
        "alg":"ES256",
        "x5u":"https://cert.example.org/passport.crt" 
    }
            ]]></artwork>
          </figure>
        </t>
        
        <section title='"typ" (Type) Header Parameter' anchor="sec.typ_header_parameter">
          
          <t>JWS defines the "typ" (Type) Header Parameter to declare the media type <xref target="IANA.MediaTypes"></xref> of the JWS. </t>
        
          <t>For PASSporT Token the "typ" header MUST minimally include and begin with "passport". This represents that the encoded token is a JWT of type passport. Note with extensions explained later in this document, the typ may be another value if defined as a passport extension.</t>
        </section>
        
        <section title='"alg" (Algorithm) Header Parameter' anchor="sec.alg_header_parameter">
        
          <t>For PASSporT, the "alg" should be defined as follows, for the creation of PASSporT tokens and their corresponding digital signatures, 
          </t>
          <t>
              <list style="symbols">
                  <t>ES256 MUST be implemented.</t>
                  <t>RS256 SHOULD be implemented</t>
              </list>
          </t>
          <t>For the verification of PASSporT tokens, both ES256 and RS256 MUST be supported.</t>
          <t>Note that JWA <xref target="RFC7518"></xref> defines other algorithms that may be utilized or updated in the future depending on cryptographic strength requirements guided by current security best practice.</t>
        
        </section>
        
        <section title='"x5u" (X.509 URL) Header Parameter' anchor="sec.x5u_header_parameter">
        
          <t>As defined in JWS, the "x5u" header parameter is used to provide a URI <xref target="RFC3986"></xref> referring to the resource for the X.509 public key certificate or certificate chain <xref target="RFC5280"></xref> corresponding to the key used to digitally sign the JWS.  Note: The definition of what the URI represents in terms of the actor serving the X.509 public key is out of scope of this document.  However, generally this would correspond to an HTTPS or DNSSEC resource with the guidance that it MUST be a TLS protected, per JWS spec.</t>
        
        </section>
        
      </section>
      
      <section title="PASSporT Payload" anchor="sec.passport_payload">
        <t>The token payload claims should consist of the information which needs to be verified at the destination party. This claim should correspond to a JWT claim <xref target="RFC7519"></xref> and be encoded as defined by the JWS Payload <xref target="RFC7515"></xref> </t>

        <t>The PASSporT defines the use of a number of standard JWT defined headers as well as two new custom headers corresponding to the two parties associated with personal communications, the originator and terminator. These headers or key value pairs are detailed below. </t>

        <section title="JWT defined claims" anchor="sec.jwt_defined_claims">
            <section title='"iat" - Issued at claim' anchor='sec.iat_issued_at_claims'>

                <t>The JSON claim MUST include the "iat" <xref target="RFC7519"></xref> defined claim issued at.  As defined this should be set to a date cooresponding to the origination of the personal communications. The time value should be of the format defined in <xref target="RFC7519"></xref> Section 2 NumericDate.  This is included for securing the token against replay and cut and paste attacks, as explained further in the security considerations in section 7.
                </t>
            </section>
        </section>
        <section title="PASSporT specific claims" anchor="sec.passprt_specific_claims">
            <section title='Originating and Destination Identities' anchor='sec.orig_dest_identities'>

                <t>Baseline PASSporT defines claims that convey the identity of the origination and destination of personal communications represented as either telephone numbers or Uniform Resource Indicators (URIs). Some using protocols may require other identifiers for personae; these may be specified as claims through the PASSporT extensibility mechanisms. But for telephone numbers and URIs, the following claims should be used:</t>

                <section title='"otn" and "dtn" - Originating and Destination Telephone Number claim' anchor='sec.otn_dtn'>
                    <t>If the originating identity is a telephone number, the claim "otn" SHOULD be included. If the destination identity is a telephone number, the claim "dtn" SHOULD be included.</t>
                    <t>Telephone Number strings for "otn" and "dtn" claims MUST be canonicalized according to the procedures specified in <xref target="I-D.ietf-stir-rfc4474bis"></xref> Section 6.1.1.</t>

                </section>

                <section title='"ouri" and "duri" - Originating and Destination URI claims' anchor='sec.ouri_duri'>
                    <t>If the originating identity is not a telephone number, the claim "ouri" SHOULD be included with the string cooresponding to the URI form of the identity as defined in <xref target="RFC3986"></xref>, alternatively it could also contain an application specific identity string, if URI format is not appropriate.</t>
                    <t>If the destination identity is not a telephone number, the claim "duri" SHOULD be included.  The same string format rules apply as stated for "ouri".</t>

                </section>
            </section>

            <section title='"mky" - Media Key claim' anchor='sec.mky_media_key_claim'>

                <t>Some protocols that use PASSporT convey hashes for media security keys within their signaling in order to bind those keys to the identities established in the signaling layers. One example would be the DTLS-SRTP key fingerprints carried in SDP via the "a=fingerprint" attribute; multiple instances of that fingerprint may appear in a single SDP body corresponding to difference media streams offered. The "mky" value of PASSporT contains a hexadecimal key presentation of any hash(es) necessary to establish media security via DTLS-SRTP. This mky value should be formated in a JSON form including the 'algorithm' and 'digest' keys with the corresponding algorithm and hexadecimal values. Note that per guidance of Section 5 of this document any whitespace and line feeds must be removed.  If there is multiple fingerprint values, more than one, the fingerprint values should be constructed as a JSON array denoted by bracket characters.</t>

                <t>An example claim with "mky" claim is as follows:</t>

                <t>For an SDP offer that includes the following fingerprint values,
                    <figure>
                        <artwork><![CDATA[
    a=fingerprint:sha-256 02:1A:CC:54:27:AB:EB:9C:53:3F:3E:4B:65:
    2E:7D:46:3F:54:42:CD:54:F1:7A:03:A2:7D:F9:B0:7F:46:19:B2
    a=fingerprint:sha-256 4A:AD:B9:B1:3F:82:18:3B:54:02:12:DF:3E:
    5D:49:6B:19:E5:7C:AB:3E:4B:65:2E:7D:46:3F:54:42:CD:54:F1
                        ]]></artwork>
                    </figure>
                </t>

		        <t>the PASSporT Payload object would be:
                    <figure>
		                <artwork><![CDATA[
    { 
        "iat":"1443208345", 
        "otn":"12155551212",
        "duri":"sip:alice@example.com",
        "mky":"[
        {
            "algorithm":"sha-256",
            "digest":"02:1A:CC:54:27:AB:EB:9C:53:3F:3E:4B:65:2E:7D:
                46:3F:54:42:CD:54:F1:7A:03:A2:7D:F9:B0:7F:46:19:B2"
        },
        {
            "algorithm":"sha-256",
            "digest":"4A:AD:B9:B1:3F:82:18:3B:54:02:12:DF:3E:5D:49:
            6B:19:E5:7C:AB:3E:4B:65:2E:7D:46:3F:54:42:CD:54:F1"
        }]"
    }
                        ]]></artwork>
                    </figure>
		        </t>
			</section>
		</section>
		
		<section title="Multi-party Communications" anchor="sec.multi_party_comms">
			
			<t>Personal communications in the context of PASSporT can certainly extend to multi-party scenerios where there is more than one destination identity. In the future, it is anticipated that PASSporT will be extended to support these cases.</t>
			
		</section>
		
      </section>
      
      <section title="PASSporT Signature" anchor="sec.passport_signature">
        <t>The signature of the PASSporT is created as specified by JWS using the private key corresponding to the X.509 public key certificate referenced by the "x5u" header parameter. </t>
      </section>
      
    </section>
    
    <section title="Extending PASSporT" anchor="sec.extending_passport">
      
      <t>PASSporT represents the bare minimum set of claims needed to assert the originating identity, however there will certainly be new and extended applications and usage of PASSPorT that will need to extend the claims to represent other information specific to the origination identities beyond the identity itself.</t>
      
      <t>There are two mechanisms defined to extend PASSporT. The first includes an extension of the base passport claims to include additional claims.  An alternative method of extending PASSporT is for applications of PASSporT unrelated to the base set of claims, that will define it's own set of claims.  Both are described below.</t>
      
      <section title='"ppt" (PASSporT) header parameter' anchor="sec.passport_header_parameter">
        
        <t>For extended profiles of PASSporT, a new JWS header parameter "ppt" MUST be used with a string that uniquely identifies the profile specification that defines any new claims that would extend the base set of claims of PASSporT.</t>
        
        <t>An example header with an extended PASSporT profile of "foo" is as follows:
          <figure>
            <artwork><![CDATA[
    { 
        "typ":"passport",
        "ppt":"foo",
        "alg":"ES256",
        "x5u":"https://tel.example.org/passport.crt" 
    }
            ]]></artwork>
          </figure>
        </t>
        
      </section>
      
      <section title="Extended PASSporT Claims" anchor="sec.extended_passport_claims">
        
        <t>Future specifications that define such extensions to the PASSporT mechanism MUST explicitly designate what claims they include, the order in which they will appear, and any further information necessary to implement the extension. All extensions MUST incorporate the baseline JWT elements specified in Section 3; claims may only be appended to the claims object specified; they can never be subtracted or re-ordered. Specifying new claims follows the baseline JWT procedures (<xref target="RFC7519"></xref> Section 10.1). Note that understanding an extension as a verifier is always optional for compliance with this specification (though future specifications or profiles for deployment environments may make other "ppt" values mandatory). The creator of a PASSporT object cannot assume that verifiers will understand any given extension. Verifiers that do support an extension may then trigger appropriate application-level behavior in the presence of an extension; authors of extensions should provide appropriate extension-specific guidance to application developers on this point.</t>
      
      </section>
      
      <section title="Alternate PASSporT Extension" anchor="sec.alternate_passport_extension">
      
        <t>Some applications may want to use the mechanism of the PASSporT digital signature that is not a superset of the base set of claims of the PASSporT token as defined in Section 3.  Rather, a specification may use PASSporT with its own defined set of claims.</t>
        
        <t>In this case, the specification SHOULD define its own MIME media type <xref target="RFC2046"></xref> in the "Media Types" registry <xref target="IANA.MediaTypes"></xref>.  The MIME subtype SHOULD start with the string "passport-" to signify that it is related to the PASSporT token.  For example, for the "foo" application the MIME type/sub-type could be defined as "application/passport-foo".</t>
      
      </section>
      
      <section title="Registering PASSporT Extensions" anchor="sec.registering_passport_extensions">
      
        <t>Toward interoperability and to maintain uniqueness of the extended PASSporT profile header parameter string, there SHOULD be an industry registry that tracks the definition of the profile strings.</t>
      
      </section>
      
    </section>
    
    <section title="Deterministic JSON Serialization" anchor="sec.deterministic_json_serialization">
      
      <t>In order to provide a deterministic representation of the PASSporT Header and Claims, particularly if PASSporT is used across multiple signaling environments, the JSON header object and JSON Claim object MUST be computed as follows.</t>
      
      <t>The JSON object MUST follow the rules for the construction of the thumbprint of a JSON Web Key (JWK) as defined in <xref target="RFC7638"></xref> Section 3.  Each JSON object MUST contain no whitespace or line breaks before or after any syntactic elements and with the required members ordered lexicographically by the Unicode <xref target="UNICODE"></xref> code points of the member names.</t>
      
      <t>In addition, the JSON header and claim members MUST follow the lexicographical ordering and character and string rules defined in <xref target="RFC7638"></xref> Section 3.3.</t>
	  
	  <section title="Example PASSport deterministic JSON form" anchor="sec.example_passport_json_form">
		  
          <t>For the example PASSporT Payload shown in Section 3.2.2.2, the following is the deterministic JSON object form.
            <figure>
              <artwork><![CDATA[
    {"iat": 1443208345,"otn":"12155551212","duri":
    "sip:alice@example.com","mky":{"algorithm":"sha-256","digest":
    "02:1A:CC:54:27:AB:EB:9C:53:3F:3E:4B:65:2E:7D:46:3F:54:42:CD:54:
    F1:7A:03:A2:7D:F9:B0:7F:46:19:B2;sha-256 4A:AD:B9:B1:3F:82:18:
    3B:54:02:12:DF:3E:5D:49:6B:19:E5:7C:AB:3E:4B:65:2E:7D:46:3F:54:
    42:CD:54:F1"}}
              ]]></artwork>
            </figure>
          </t>
	  
	  </section>
      
    </section>
    
    <section title="Human Readability" anchor="sec.human_readability">
      
      <t>JWT <xref target="RFC7519"></xref> and JWS <xref target="RFC7515"></xref> are defined to use Base64 and/or UTF8 encoding to the Header, Payload, and Signature sections.  However, many personal communications protocols, such as SIP and XMPP, use a "human readable" format to allow for ease of use and ease of operational debugging and monitoring.  As such, specifications using PASSporT may provide guidance on whether Base64 encoding or plain text will be used for the construction of the PASSporT Header and Claim sections.</t>
      
    </section>
      
    <section title="Security Considerations" anchor="sec.security_considerations">
      
      <section title="Avoidance of replay and cut and paste attacks" anchor="sec.avoidance_of_attacks">
        
        <t>There are a number of security considerations for use of the token for avoidance of replay and cut and paste attacks. PASSporT tokens must be sent along with other application level protocol information (e.g. for SIP an INVITE as defined in <xref target="RFC3261"></xref>). There should be a link between various information provided in the token and information provided by the application level protocol information.</t>
        
        <t>These would include:
          <list style="symbols">
            <t>"iat" claim should closely correspond to a date/time the message was originated.  It should also be within a relative delta time that is reasonable for clock drift and transmission time characteristics associated with the application using the PASSporT token.</t>
            <t>either "dtn" claim or "duri" claim is included to prevent the ability to use a previously originated message to send to another destination party</t>
          </list> 
        </t>
        
      </section>
      
      <section title="Solution Considerations" anchor="sec.solution_considerations">
        
        <t>It should be recognized that the use of this token should not, in it's own right, be considered a full solution for absolute non-repudiation of the persona being asserted. This only provides non-repudiation of the signer of PASSporT. If the signer and the persona are not one in the same, which can and often will be the case in telecommunications networks today, protecting the destination party from being spoofed may take some interpretation or additional verification of the link between the PASSporT signature and the persona being asserted.</t>
        
        <t>In addition, the telecommunications systems and specifications that use PASSporT should in practice provide mechanisms for:
          <list style="symbols">
            <t>Managing X.509 certificates and X.509 certificate chains to an authorized trust anchor that can be a trusted entity to all participants in the telecommunications network</t>
            <t>Accounting for entities that may route calls from other peer or interconnected telecommunications networks that are not part of the "trusted" communications network or may not be following the usage of PASSporT or the profile of PASSporT appropriate to that network</t>
            <t>Following best practices around management and security of X.509 certificates</t>
          </list> 
        </t>
        
      </section>
	  
      <section title="Privacy Considerations" anchor="sec.privacy_considerations">
        
        <t>Because PASSporT explicity includes claims of identitifiers of parties involved in communications, times, and potentially other call detail, care should be taken outside of traditional protected or private telephony communications paths where there may be concerns about exposing information to either unintended or illegitimately intented actors.  These identifiers are often exposed through many communications signaling protocols as of today, but appropriate precautions should be taken.</t>
        
      </section>
    
    </section>
    
    <section title="IANA Considerations" anchor="sec.iana_considerations">
      
      <section title="Media Type Registration" anchor="sec.media_type_registration">
        
        <section title="Media Type Registry Contents Additions Requested" anchor="sec.media_type_request">
        
          <t>This section registers the "application/passport" media type <xref target="RFC2046"></xref> in the "Media Types" registry <xref target="IANA.MediaTypes"></xref> in the manner described in <xref target="RFC6838"></xref>, which can be used to indicate that the content is a PASSporT defined JWT and JWS.</t>
        
          <t>
            <list style="symbols">
              <t>Type name: application</t>
              <t>Subtype name: passport</t>
              <t>Required parameters: n/a</t>
              <t>Optional parameters: n/a</t>
              <t>Encoding considerations: 8bit; application/passport values are encoded as a series of base64url-encoded values (some of which may be the empty string), each separated from the next by a single period ('.') character.</t>
              <t>Security considerations: See the Security Considerations section of RFC 7515.</t>
              <t>Interoperability considerations: n/a</t>
              <t>Published specification: draft-ietf-stir-passport-00</t>
              <t>Applications that use this media type: STIR and other applications that require identity related assertion</t>
              <t>Fragment identifier considerations: n/a</t>
              <t>Additional information:
                <list style="symbols">
                  <t>Magic number(s): n/a</t>
                  <t>File extension(s): n/a</t>
                  <t>Macintosh file type code(s): n/a</t>
                </list>
              </t>
              <t>Person and email address to contact for further information: Chris Wendt, chris-ietf@chriswendt.net</t>
              <t>Intended usage: COMMON</t>
              <t>Restrictions on usage: none</t>
              <t>Author: Chris Wendt, chris-ietf@chriswendt.net</t>
              <t>Change Controller: IESG</t>
              <t>Provisional registration?  No</t>
            </list> 
          </t>
          
        </section>
        
      </section>
      
      <section title="JSON Web Token Claims Registration" anchor="sec.json_web_token_claims_registration">
        
        <section title="Registry Contents Additions Requested" anchor="sec.registry_contents_additions_request">
      
          <t>
            <list style="symbols">
              <t>Claim Name: "otn"</t>
              <t>Claim Description: Originating Telephone Number String</t>
              <t>Change Controller: IESG</t>
              <t>Specification Document(s): Section 3.2 of draft-ietf-stir-passport-00</t>
            </list> 
          </t>

          <t>
            <list style="symbols">
              <t>Claim Name: "dtn"</t>
              <t>Claim Description: Destination Telephone Number String</t>
              <t>Change Controller: IESG</t>
              <t>Specification Document(s): Section 3.2 of draft-ietf-stir-passport-00</t>
            </list> 
          </t>

          <t>
            <list style="symbols">
              <t>Claim Name: "ouri"</t>
              <t>Claim Description: Originating URI String</t>
              <t>Change Controller: IESG</t>
              <t>Specification Document(s): Section 3.2 of draft-ietf-stir-passport-00</t>
            </list> 
          </t>

          <t>
            <list style="symbols">
              <t>Claim Name: "duri"</t>
              <t>Claim Description: Destination URI String</t>
              <t>Change Controller: IESG</t>
              <t>Specification Document(s): Section 3.2 of draft-ietf-stir-passport-00</t>
            </list> 
          </t>

          <t>
            <list style="symbols">
              <t>Claim Name: "mky"</t>
              <t>Claim Description: Media Key Fingerprint String</t>
              <t>Change Controller: IESG</t>
              <t>Specification Document(s): Section 3.2 of draft-ietf-stir-passport-00</t>
            </list> 
          </t>
                
        </section>
        
      </section>
    
    </section>

    <section title="Acknowledgements" anchor="sec.acknowledgements">
      <t>Particular thanks to members of the ATIS and SIP Forum NNI Task Group including Jim McEchern, Martin Dolly, Richard Shockey, John Barnhill, Christer Holmberg, Victor Pascual Avila, Mary Barnes, and Eric Burger for their review, ideas, and contributions. Also thanks to Henning Schulzrinne, Russ Housley, Alan Johnston, and Richard Barnes for valuable feedback on the technical and security aspects of the document. Additional thanks to Harsha Bellur for assistance in coding the example tokens.</t>
    </section>
    
  </middle>
  
  <back>
    <references title="References">
      <reference anchor="IANA.MediaTypes" target="Media Types">
        <front>
          <title>IANA, "Media Types"</title>
          <author/>
          <date/>
        </front>
      </reference>
      
      <reference anchor="I-D.ietf-stir-rfc4474bis">
        <front>
          <title>Authenticated Identity Management in the Session Initiation Protocol (SIP)</title>
          <author initials="J" surname="Peterson" fullname="Jon Peterson">
            <organization/>
          </author>
          <author initials="C" surname="Jennings" fullname="Cullen Jennings">
            <organization/>
          </author>
          <author initials="E" surname="Rescorla" fullname="Eric Rescorla">
            <organization/>
          </author>
          <author initials="C" surname="Wendt" fullname="Chris Wendt">
            <organization/>
          </author>
          <date month="February" day="3" year="2016"/>
        </front>
        <seriesInfo name="Internet-Draft" value="draft-ietf-stir-rfc4474bis-07"/>
        <format type="TXT" target="http://www.ietf.org/internet-drafts/draft-ietf-stir-rfc4474bis-07.txt"/>
      </reference>
      
      <reference anchor="UNICODE" target="http://www.unicode.org/versions/latest/">
        <front>
          <title>The Unicode Consortium, "The Unicode Standard"</title>
          <author/>
          <date/>
        </front>
      </reference>
      
      <reference anchor="RFC2046" target="http://www.rfc-editor.org/info/rfc2046">
        <front>
          <title>Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types</title>
          <author initials="N." surname="Freed" fullname="N. Freed">
            <organization/>
          </author>
          <author initials="N." surname="Borenstein" fullname="N. Borenstein">
            <organization/>
          </author>
          <date year="1996" month="November"/>
        </front>
        <seriesInfo name="RFC" value="2046"/>
        <seriesInfo name="DOI" value="10.17487/RFC2046"/>
      </reference>

      <reference anchor="RFC3261" target="http://www.rfc-editor.org/info/rfc3261">
        <front>
          <title>SIP: Session Initiation Protocol</title>
          <author initials="J." surname="Rosenberg" fullname="J. Rosenberg">
            <organization/>
          </author>
          <author initials="H." surname="Schulzrinne" fullname="H. Schulzrinne">
            <organization/>
          </author>
          <author initials="G." surname="Camarillo" fullname="G. Camarillo">
            <organization/>
          </author>
          <author initials="A." surname="Johnston" fullname="A. Johnston">
            <organization/>
          </author>
          <author initials="J." surname="Peterson" fullname="J. Peterson">
            <organization/>
          </author>
          <author initials="R." surname="Sparks" fullname="R. Sparks">
            <organization/>
          </author>
          <author initials="M." surname="Handley" fullname="M. Handley">
            <organization/>
          </author>
          <author initials="E." surname="Schooler" fullname="E. Schooler">
            <organization/>
          </author>
          <date year="2002" month="June"/>
        </front>
        <seriesInfo name="RFC" value="3261"/>
        <seriesInfo name="DOI" value="10.17487/RFC3261"/>
      </reference>
      
      <reference anchor="RFC3986" target="http://www.rfc-editor.org/info/rfc3986">
        <front>
          <title>Uniform Resource Identifier (URI): Generic Syntax</title>
          <author initials="T." surname="Berners-Lee" fullname="T. Berners-Lee">
            <organization/>
          </author>
          <author initials="R." surname="Fielding" fullname="R. Fielding">
            <organization/>
          </author>
          <author initials="L." surname="Masinter" fullname="L. Masinter">
            <organization/>
          </author>
          <date year="2005" month="January"/>
        </front>
        <seriesInfo name="STD" value="66"/>
        <seriesInfo name="RFC" value="3986"/>
        <seriesInfo name="DOI" value="10.17487/RFC3986"/>
      </reference>
      
      <reference anchor="RFC5280" target="http://www.rfc-editor.org/info/rfc5280">
        <front>
          <title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
          <author initials="D." surname="Cooper" fullname="D. Cooper">
            <organization/>
          </author>
          <author initials="S." surname="Santesson" fullname="S. Santesson">
            <organization/>
          </author>
          <author initials="S." surname="Farrell" fullname="S. Farrell">
            <organization/>
          </author>
          <author initials="S." surname="Boeyen" fullname="S. Boeyen">
            <organization/>
          </author>
          <author initials="R." surname="Housley" fullname="R. Housley">
            <organization/>
          </author>
          <author initials="W." surname="Polk" fullname="W. Polk">
            <organization/>
          </author>
          <date year="2008" month="May"/>
        </front>
        <seriesInfo name="RFC" value="5280"/>
        <seriesInfo name="DOI" value="10.17487/RFC5280"/>
      </reference>
      
      <reference anchor="RFC6838" target="http://www.rfc-editor.org/info/rfc6838">
        <front>
          <title>Media Type Specifications and Registration Procedures</title>
          <author initials="N." surname="Freed" fullname="N. Freed">
            <organization/>
          </author>
          <author initials="J." surname="Klensin" fullname="J. Klensin">
            <organization/>
          </author>
          <author initials="T." surname="Hansen" fullname="T. Hansen">
            <organization/>
          </author>
          <date year="2013" month="January"/>
        </front>
        <seriesInfo name="BCP" value="13"/>
        <seriesInfo name="RFC" value="6838"/>
        <seriesInfo name="DOI" value="10.17487/RFC6838"/>
      </reference>

      <reference anchor="RFC7515" target="http://www.rfc-editor.org/info/rfc7515">
        <front>
          <title>JSON Web Signature (JWS)</title>
          <author initials="M." surname="Jones" fullname="M. Jones">
            <organization/>
          </author>
          <author initials="J." surname="Bradley" fullname="J. Bradley">
            <organization/>
          </author>
          <author initials="N." surname="Sakimura" fullname="N. Sakimura">
            <organization/>
          </author>
          <date year="2015" month="May"/>
        </front>
        <seriesInfo name="RFC" value="7515"/>
        <seriesInfo name="DOI" value="10.17487/RFC7515"/>
      </reference>

      <reference anchor="RFC7518" target="http://www.rfc-editor.org/info/rfc7518">
        <front>
          <title>JSON Web Algorithms (JWA)</title>
          <author initials="M." surname="Jones" fullname="M. Jones">
            <organization/>
          </author>
          <date year="2015" month="May"/>
        </front>
        <seriesInfo name="RFC" value="7518"/>
        <seriesInfo name="DOI" value="10.17487/RFC7518"/>
      </reference>

      <reference anchor="RFC7519" target="http://www.rfc-editor.org/info/rfc7519">
        <front>
          <title>JSON Web Token (JWT)</title>
          <author initials="M." surname="Jones" fullname="M. Jones">
            <organization/>
          </author>
          <author initials="J." surname="Bradley" fullname="J. Bradley">
            <organization/>
          </author>
          <author initials="N." surname="Sakimura" fullname="N. Sakimura">
            <organization/>
          </author>
          <date year="2015" month="May"/>
        </front>
        <seriesInfo name="RFC" value="7519"/>
        <seriesInfo name="DOI" value="10.17487/RFC7519"/>
      </reference>
    
      <reference anchor="RFC7638" target="http://www.rfc-editor.org/info/rfc7638">
        <front>
          <title>JSON Web Key (JWK) Thumbprint</title>
          <author initials="M." surname="Jones" fullname="M. Jones">
            <organization/>
          </author>
          <author initials="N." surname="Sakimura" fullname="N. Sakimura">
            <organization/>
          </author>
          <date year="2015" month="September"/>
        </front>
        <seriesInfo name="RFC" value="7638"/>
        <seriesInfo name="DOI" value="10.17487/RFC7638"/>
      </reference>
    </references>

    <section title="Example ES256 base PASSporT JWS Serialization and Signature" anchor="sec.appendix_a">

        <t>For PASSporT, there will always be a JWS with the following members:
          <list style="symbols">
            <t>"protected", with the value BASE64URL(UTF8(JWS Protected Header))</t>
            <t>"payload", with the value BASE64URL (JWS Payload)</t>
            <t>"signature", with the value BASE64URL(JWS Signature)</t>
          </list> 
        </t>

        <t>Note: there will never be a JWS Unprotected Header for PASSporT.</t>

        <t>First, an example PASSporT Protected Header is as follows:
          <figure>
            <artwork><![CDATA[
    { 
        "typ":"passport",
        "alg":"ES256",
        "x5u":"https://cert.example.org/passport.crt" 
    }
            ]]></artwork>
          </figure>
        </t>
		
        <t>This would be serialized to the form:
          <figure>
            <artwork><![CDATA[
    {"typ":"passport","alg":"ES256","x5u":"https://cert.example.org/
    passport.crt"}
            ]]></artwork>
          </figure>
        </t>
		
        <t>Encoding this with UTF8 and BASE64 encoding produces this value:
          <figure>
            <artwork><![CDATA[
    eyJ0eXAiOiJwYXNzcG9ydCIsImFsZyI6IkVTMjU2IiwieDV1IjoiaHR0cHM6Ly9j
    ZXJ0LmV4YW1wbGUub3JnL3Bhc3Nwb3J0LmNydCJ9
            ]]></artwork>
          </figure>
        </t>
		
        <t>Second, an example PASSporT Payload is as follows:
          <figure>
            <artwork><![CDATA[
    { 
        "iat":"1443208345", 
        "otn":"12155551212",
        "duri":"sip:alice@example.com"
    }
            ]]></artwork>
          </figure>
        </t>
		
        <t>This would be serialized to the form:
          <figure>
            <artwork><![CDATA[
    {"iat":"1443208345","otn":"12155551212","duri":
    "sip:alice@example.com"}
            ]]></artwork>
          </figure>
        </t>
		
        <t>Encoding this with the UTF8 and BASE64 encoding produces this value:
          <figure>
            <artwork><![CDATA[
    eyJpYXQiOiIxNDQzMjA4MzQ1Iiwib3RuIjoiMTIxNTU1NTEyMTIiLCJkdXJp
    Ijoic2lwOmFsaWNlQGV4YW1wbGUuY29tIn0
            ]]></artwork>
          </figure>
        </t>
		
        <t>Computing the digital signature of the PASSporT Signing Input ASCII(BASE64URL(UTF8(JWS Protected Header)) || '.' || BASE64URL(JWS Payload))
          <figure>
            <artwork><![CDATA[
    KK89q2RFY-BkKQQhiB0z6-fIaFUy6NDyUboKXOix9XnYLxTCjdw1UHjCbw4Ce
    feKwH_t7W-bnGlZz4pI-rMjfQ
            ]]></artwork>
          </figure>
        </t>
		
        <t>The final PASSporT token is produced by concatenating the values in the order Header.Payload.Signature with period (',') characters.  For the above example values this would produce the following:
          <figure>
            <artwork><![CDATA[
    eyJ0eXAiOiJwYXNzcG9ydCIsImFsZyI6IkVTMjU2IiwieDV1IjoiaHR0cHM6Ly9j
    ZXJ0LmV4YW1wbGUub3JnL3Bhc3Nwb3J0LmNydCJ9
    .
    eyJpYXQiOiIxNDQzMjA4MzQ1Iiwib3RuIjoiMTIxNTU1NTEyMTIiLCJkdXJpIjoi
    c2lwOmFsaWNlQGV4YW1wbGUuY29tIn0
    .
    KK89q2RFY-BkKQQhiB0z6-fIaFUy6NDyUboKXOix9XnYLxTCjdw1UHjCbw4CefeK
    wH_t7W-bnGlZz4pI-rMjfQ
            ]]></artwork>
          </figure>
        </t>
        <section title="X.509 Private Key Certificate for Example in Appendix A" anchor="sec.appendix_a_1">
            <t>
                <figure>
                    <artwork><![CDATA[
    -----BEGIN EC PRIVATE KEY-----
    MHcCAQEEIFeZ1R208QCvcu5GuYyMfG4W7sH4m99/7eHSDLpdYllFoAoGCCqGSM49
    AwEHoUQDQgAE8HNbQd/TmvCKwPKHkMF9fScavGeH78YTU8qLS8I5HLHSSmlATLcs
    lQMhNC/OhlWBYC626nIlo7XeebYS7Sb37g==
    -----END EC PRIVATE KEY-----
                ]]></artwork>
              </figure>
            </t>
        </section>
    
        <section title="X.509 Public Key Certificate for Example in Appendix A" anchor="sec.appendix_a_2">
		
            <t>
                <figure>
                    <artwork><![CDATA[
    -----BEGIN PUBLIC KEY-----
    MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE8HNbQd/TmvCKwPKHkMF9fScavGeH
    78YTU8qLS8I5HLHSSmlATLcslQMhNC/OhlWBYC626nIlo7XeebYS7Sb37g==
    -----END PUBLIC KEY-----
                ]]></artwork>
              </figure>
            </t>
        </section>
    </section>
    <section title="Example RS256 base PASSporT JWS Serialization and Signature" anchor="sec.appendix_b">

        <t>For PASSporT, there will always be a JWS with the following members:
          <list style="symbols">
            <t>"protected", with the value BASE64URL(UTF8(JWS Protected Header))</t>
            <t>"payload", with the value BASE64URL (JWS Payload)</t>
            <t>"signature", with the value BASE64URL(JWS Signature)</t>
          </list> 
        </t>

        <t>Note: there will never be a JWS Unprotected Header for PASSporT.</t>

        <t>First, an example PASSporT Protected Header is as follows:
          <figure>
            <artwork><![CDATA[
    { 
        "typ":"passport",
        "alg":"RS256",
        "x5u":"https://cert.example.org/passport.crt" 
    }
            ]]></artwork>
          </figure>
        </t>
		
        <t>This would be serialized to the form:
          <figure>
            <artwork><![CDATA[
    {"typ":"passport","alg":"RS256","x5u":"https://cert.example.org/
    passport.crt"}
            ]]></artwork>
          </figure>
        </t>
		
        <t>Encoding this with UTF8 and BASE64 encoding produces this value:
          <figure>
            <artwork><![CDATA[
    eyJ0eXAiOiJwYXNzcG9ydCIsImFsZyI6IlJTMjU2IiwieDV1IjoiaHR0cHM
    6Ly9jZXJ0LmV4YW1wbGUub3JnL3Bhc3Nwb3J0LmNydCJ9
            ]]></artwork>
          </figure>
        </t>
		
        <t>Second, an example PASSporT Payload is as follows:
          <figure>
            <artwork><![CDATA[
    { 
        "iat":"1443208345", 
        "otn":"12155551212",
        "duri":"sip:alice@example.com"
    }
            ]]></artwork>
          </figure>
        </t>
		
        <t>This would be serialized to the form:
          <figure>
            <artwork><![CDATA[
    {"iat":"1443208345","otn":"12155551212","duri":
    "sip:alice@example.com"}
            ]]></artwork>
          </figure>
        </t>
		
        <t>Encoding this with the UTF8 and BASE64 encoding produces this value:
          <figure>
            <artwork><![CDATA[
    eyJpYXQiOiIxNDQzMjA4MzQ1Iiwib3RuIjoiMTIxNTU1NTEyMTIiLCJkdXJp
    Ijoic2lwOmFsaWNlQGV4YW1wbGUuY29tIn0
            ]]></artwork>
          </figure>
        </t>
		
        <t>Computing the digital signature of the PASSporT Signing Input ASCII(BASE64URL(UTF8(JWS Protected Header)) || '.' || BASE64URL(JWS Payload))
          <figure>
            <artwork><![CDATA[
    AaeXRqm7kHnkZu2j6cQmDCiomZRiaE55bYWhFgnX8xMqpBFq96M0xgMM5OLa9
    _LMrkuKv2ivK5GZz8OlFrmAirucRlAh8YdUkj5Cr5xPRr-gg9acD9jqJUnQ-Z
    xpL1yq-FFVLhvpbsE5NMPHXUp5lpt62rD-S0NlhwHNCeMqZHxt6T5BmZBXITE
    d1PRRij_6FhE3wxWEhZMthWJuEbcPpRMZDu-R7lTNddn62nUKjn3s00R3gm25
    Dto5Z0dzfQpAysJvnbc1QRimfsYqJPUFc57lnglVLf4WrpeZCc8-LcoXeSr_d
    seDgsrmg2EuHmn5h1nTOmLgF16ZHm121ZVjiXz2sMFvs9RaIxw0AFkM7rnV56
    OxAFCRuzMNldiEVf8plRZVvqZ4BfVQlCNXNyyVgPOUtNr3ta6yD2H0oANQvvH
    twjuSwB9Kruj4Wsu5N7Iki4MBs6SWJDmcUV-NW_AHYLaao-IvFVe4oCkJNjsq
    wwXuLv1TO2sDHdc5sQO5zm21019PPxw1udHVtywsRVNKLo0RzE0TqYUF7XclC
    Dur7MMOx9SnStV2PFIM7Jejyn9x54RtJEjOnchaSalfIFr_UXqXgVmRZVTzLD
    QIlcmHjlhhLnCnNx3sYsAANen8Y8jtfgJ2ewjGotB4Lq8VYe1FacBKKk0VyCf
    ImXba0u1hB8Q
            ]]></artwork>
          </figure>
        </t>
		
        <t>The final PASSporT token is produced by concatenating the values in the order Header.Payload.Signature with period (',') characters.  For the above example values this would produce the following:
          <figure>
            <artwork><![CDATA[
    eyJ0eXAiOiJwYXNzcG9ydCIsImFsZyI6IlJTMjU2IiwieDV1IjoiaHR0cHM6L
    y9jZXJ0LmV4YW1wbGUub3JnL3Bhc3Nwb3J0LmNydCJ9
    .
    eyJpYXQiOiIxNDQzMjA4MzQ1Iiwib3RuIjoiMTIxNTU1NTEyMTIiLCJkdXJpI
    joic2lwOmFsaWNlQGV4YW1wbGUuY29tIn0
    .
    AaeXRqm7kHnkZu2j6cQmDCiomZRiaE55bYWhFgnX8xMqpBFq96M0xgMM5OLa9
    _LMrkuKv2ivK5GZz8OlFrmAirucRlAh8YdUkj5Cr5xPRr-gg9acD9jqJUnQ-Z
    xpL1yq-FFVLhvpbsE5NMPHXUp5lpt62rD-S0NlhwHNCeMqZHxt6T5BmZBXITE
    d1PRRij_6FhE3wxWEhZMthWJuEbcPpRMZDu-R7lTNddn62nUKjn3s00R3gm25
    Dto5Z0dzfQpAysJvnbc1QRimfsYqJPUFc57lnglVLf4WrpeZCc8-LcoXeSr_d
    seDgsrmg2EuHmn5h1nTOmLgF16ZHm121ZVjiXz2sMFvs9RaIxw0AFkM7rnV56
    OxAFCRuzMNldiEVf8plRZVvqZ4BfVQlCNXNyyVgPOUtNr3ta6yD2H0oANQvvH
    twjuSwB9Kruj4Wsu5N7Iki4MBs6SWJDmcUV-NW_AHYLaao-IvFVe4oCkJNjsq
    wwXuLv1TO2sDHdc5sQO5zm21019PPxw1udHVtywsRVNKLo0RzE0TqYUF7XclC
    Dur7MMOx9SnStV2PFIM7Jejyn9x54RtJEjOnchaSalfIFr_UXqXgVmRZVTzLD
    QIlcmHjlhhLnCnNx3sYsAANen8Y8jtfgJ2ewjGotB4Lq8VYe1FacBKKk0VyCf
    ImXba0u1hB8Q
            ]]></artwork>
          </figure>
        </t>
        <section title="X.509 Private Key Certificate for Example in Appendix A" anchor="sec.appendix_b_1">
            <t>
                <figure>
                    <artwork><![CDATA[
    -----BEGIN RSA PRIVATE KEY-----
    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
    -----END RSA PRIVATE KEY-----
                ]]></artwork>
              </figure>
            </t>
        </section>
    
        <section title="X.509 Public Key Certificate for Example in Appendix A" anchor="sec.appendix_b_2">
		
            <t>
                <figure>
                    <artwork><![CDATA[
    -----BEGIN PUBLIC KEY-----
    MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAsrKb3NsMgrXTzEcNlg3v
    aBbI12mG3D9QBn61H8PpsVFIh3MAXNXjkV64he/eEQou3STTEgSqUXj5kj+jnnVF
    F0Cd0T6j7SuRvpq5YaiKfXgdUlsvF3LjTRGyoKRNOf16f/zEFiyJBX10vj/LKvnW
    os1vVTSqBeui2dNLynr0+f1n8b0+0FZwACceo3qaVwuSNIJWSQgM1qAINBpPEKnr
    Ipdt5fa7mUorJ5gjITys3gjNJ4eesjqUEu5ZGXDgMshVtH2iMceC1393sK6rJ7z+
    g3jVziSo6vy9lA2wveKMuoqQTwp0V0IrkzExU7vpTzyx0E3mJNmlgmDp7Whp2HCv
    KjeG+iPfsuPMDRggUrdy9qG6QTFqQORzLywTpu78ExYMSfqt94NVhf2Dv+QEPoyt
    T1avN6bwGu/R/84g2z0YMfum5roSTG5PGP4H56vjML8wNTd6v8Ny8SLAgzG/XBaV
    7c8Ll2awLEj4FSeBpNzTyDgnLrth7Tk0LmM8EtO1aozDDEaMFrNy4/L+Uuwxp/wc
    FADawE9N7VdHa9endEo9V/bu1tkqecv1Ma+G4NvJZzD8JTBRVsHNc3zvI0qD0KWC
    jqPvaIMiiVATVAIW9ZEtUZNm5UVuDzhcY7QrXNRpGE6ULIXgim66mbfUQ0LFq4G+
    zUjoRZTA92rFBn4vDKvsPs8CAwEAAQ==
    -----END PUBLIC KEY-----
                ]]></artwork>
              </figure>
            </t>
        </section>
    </section>
  </back>
</rfc>