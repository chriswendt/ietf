<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7515 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7515.xml">
<!ENTITY RFC7519 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7519.xml">
<!ENTITY I-D.narten-iana-considerations-rfc2434bis SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.narten-iana-considerations-rfc2434bis.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<rfc category="info" docName="draft-wendt-shaken-00" ipr="trust200902">

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <title abbrev="Shaken">Secure HAndling of verifiable information using toKENs</title>

    <author fullname="Chris Wendt" initials="C.W." role="editor"
            surname="Wendt">
      <organization>Comcast</organization>

      <address>
        <postal>
          <street>One Comcast Center</street>
          <city>Philadelphia</city>
          <region>PA</region>
          <code></code>
          <country>US</country>
        </postal>
        <phone>+1-215-286-7093</phone>
        <email>chris_wendt@cable.comcast.com</email>
      </address>
    </author>

    <date month="September" year="2015" />

    <!-- Meta-data Declarations -->

    <area>General</area>

    <workgroup>Internet Engineering Task Force</workgroup>

    <keyword>template</keyword>

         <abstract>
           <t> This memo defines a mechanism for securing verifiable information where an originator needs to prove to the terminating party that the information can be cryptographically proven was sent by the originator.  This verified information could include network identity, device identity, realm of origin, and other metadata that could cross both trusted and likely untrusted or unknown points in the network.  Verification of this information in the telephony world is important for securing telephone calls end-to-end and can be utilized as an important tool for combat spoofing of identity and other forms of impersonation.  </t>
         </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>This document will define a method for the creation and verification of an extensible canonical token that cryptographically represents a particular set of information, originator the information, and can chain the originator to a trust anchor.  A goal of this approach is to be implementable in a straight-forward and evolutionary way.  A second goal is to be separable from any specific signaling call logic, so creation and verification of information can be implemented in a flexible way with minimal dependence on specific signaling constructs.  A third goal is to utilize as much as possible existing technologies and infrastructure to allow a shorter path to adoption. </t>

      <section title="Conventions used in this document">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
        target="RFC2119">RFC 2119</xref>.</t>
      </section>
    </section>

    <section title="Overview">
      <t>SHAKEN specifically defines both the use of tokens and a practical framework for managing keys and certificates with limited chain of trust.  This framework assumes there is a centralized trust agent who has a very limited chain of trust, i.e. single link, and is intentionally linked to the originator of the information represented by a unique realm or domain, typically associated with a public domain owned by the originator.</t>
      <section title="Trust Framework Overview">
          <t>SHAKEN uses the X.509 certificate framework and the concepts of a trust anchor and certificate chain.  The trust anchor is represented by the party that can authorize those that can originating and/or verify a set of information that is signed by a digital signature linked to a certificate chain back to the trust anchor.  For the applications SHAKEN is targeted, this is typically a limited community where direct trust relationships is manageable.  Therefore, the preferred scenario is that a certificate chain only has a single chain from participating parties to the trust anchor.  
          </t>
      </section>
      <section title="Token Overview">
          <t>Tokens are a convenient way of encapsulating information with associated cryptographic signatures.  They are used in many applications that require authentication, authorization, encryption and other use cases that involve digital signatures.  JWT <xref target="RFC7519">RFC 7519</xref> and JWS <xref target="RFC7515">RFC 7515</xref> are designed to provide a compact form for many of these purposes and define a specific form for specifying information associated with the token and an extensible mechanisms for applying digital signatures and the cryptographic algorithms used. JWT has the form "header.claim.signature" and JWS provides standard ways to form a digital signature.  Note: In this document, we will focus on digital signatures, but JWT and JWS also support HMAC symmetric key based algorithms as well. 
          </t>
      </section>
      <section title="Key Management Overview">
          <t> Security and key management in the SHAKEN framework is guided by X.509 certificate management.  Parties that would like to originate information as an authorized participant will generate a certificate signing request (CSR) to the trust anchor.  This CSR will define the Distinguished Name (DN) to be a fully qualified domain name.  In most cases, this fully qualified domain name SHOULD correspond directly to and is owned by the party as part of the internet DNS.  This has much to do with how the public key certificate should be distributed to all participants.</t>
     <t> The authorized participant will use the resulting public/private key pair and certificate chain to sign the SHAKEN tokens, thus cryptographically associating the token to the originator.  The SHAKEN token will contain a URI for accessing the public key certificate that can be used for validation of the signature and therefore verification of the information and the originator.</t>

     <t> The use of a trust anchor and certificate chain is highly recommended, however in the case of private deployments or for the case where trust anchor has not been established within a given system, certificate chaining does not need to be used, or could be integrated at a later point.  X.509 and the signing mechanisms built into the token will be able to signal the certificate chain dependency.  This flexibility also allows for future needs for evolution of the security needed, for example, intermediate trust anchors, or other X.509 supported mechanisms.
          </t>
      </section>
      <section title="Key Distribution Overview">
          <t>
              In order to facilitate ease of distribution of public key certificates, particularly for the applications that SHAKEN is targeted where there is a limited number of authorized participants, a number of mechanisms are suggested.  These include: <list style="symbols">
                  <t>sharing of public keys - participants share keys directly</t>
                  <t>registry or distributed registry - participants share keys through a centralized or distributed registry</t>
                  <t>Public or Private DNS - participants share keys in DNSKEY RR for domain corresponding to realm used for certificate [TODO - should address DNS spoofing via DNSSEC]</t>
                  <t>HTTP well known - participants share keys via HTTP using well know URI for domain corresponding to realm used for certificate (TODO: should address DNS spoofing via DNSSEC)</t>
              </list>
          </t>
      </section>
    </section>
    
    <section title="Verify Token (VT)">
        <t> The Verify Token (VT) is constructed based on JWT [RFC7519] and JWS [RFC7515] specifications.</t>

            <t>The token header is a JOSE header.  An example of the header for the case of a symmetric key HMAC SHA-256 would be the following,</t>
            <figure>
                <artwork> <![CDATA[
	{"typ":"JWT",
	 "alg":"RS256"}
                ]]> </artwork>
                 </figure>
           <t> This represents the fact that the encoded token is a JWT, and the JWT is a JWS using the HMAC SHA-256 algorithm.
            Other likely algorithms used for the PAI token parameter would include signatures using a X.509 certificate chain.
            This header is Base64url encoded per JWT specification.
        </t>
        <section title="Token Claim">
            <t> The token claim should consist of the protected information.  For the PAI parameter token, the header MUST include the calling number and the realm of origin.  In addition, the claim should include a "jti", JWT ID, for a unique identifier for the JWT.  The purpose of this "jti" claim is to prevent the JWT from being replayed.
</t>
<t>An example claim is as follows,</t>
            <figure>
                <artwork> <![CDATA[
    { "tel":"+12155551212",
      "realm":"tel.comcast.net",
      "jti":" 710b962e-041c-11e1-9234-0123456789ab" }
    "tel" is the claimed caller-id in e.164 format
    "realm" is the domain associated with the originating SIP service provider
    "jti" is a UUID as defined in RFC4122
                ]]> </artwork>
            </figure>
            
        </section>
        <section title="Token Signature">
            <t>
            </t>
        </section>
    </section>


    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>Would like to thank members of the ATIS and SIP Forum NNI Task Group for feedback encouragement particularly ...</t>

    </section>

    <!-- Possibly a 'Contributors' section ... -->

    <section anchor="IANA" title="IANA Considerations">
      <t>This memo includes no request to IANA.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>Security Considerations</t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>

    <references title="Normative References">
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->
      &RFC2119;
      
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.7515.xml"?-->
      &RFC7515;
      
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.7519.xml"?-->
      &RFC7519;

    </references>


    <section anchor="app-additional" title="Example Tokens">
      <t>Provide some example tokens</t>
    </section>

  </back>
</rfc>
